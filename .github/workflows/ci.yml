name: CI

on:
  schedule:
    - cron: "0 3 * * *"
  push:
    tags:
      - "v*.*.*"
    branches:
      - main
    paths-ignore:
      - README.md
      - API.md
      - docs/*.rst
  pull_request:
    branches:
      - main
    types:
      - ready_for_review
      - opened
      - reopened
      - synchronize
    paths-ignore:
      - README.md
      - API.md
      - docs/*.rst

jobs:
  test:
    runs-on: ubuntu-latest
    if: github.event_name == 'release' || github.event_name == 'push' || !github.event.pull_request.draft
    timeout-minutes: 10

    steps:
      - name: Checkout the commit
        uses: actions/checkout@v3

      - name: Set up Node
        uses: actions/setup-node@v3
        with:
          node-version: 16

      - name: Cache dependencies
        id: cache
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Run Planetmint node
        run: |
          echo Building and starting up docker containers
          docker-compose -f ./docker-compose.yml up -d

      - name: Install dependencies
        env:
          HUSKY_SKIP_INSTALL: 'true'
        run: npm install

      - name: Lint
        run: npm run lint

      - name: Build
        run: npm run build

      # ensure Planetmint node is up and running
      # eventually we could make something more reliable by pinging Planetmint until its healthy
      - run: sleep 20

      - name: Test
        run: npm run test

  release-npm:
    needs: test
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest

    steps:
      - name: Checkout the commit
        uses: actions/checkout@v3

      - name: Set up Node
        uses: actions/setup-node@v3
        with:
          node-version: 16
          registry-url: 'https://registry.npmjs.org'

      - name: Install dependencies
        run: npm ci

      - name: Upload to npm
        run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_AUTOMATION_TOKEN }}

  release-github:
    needs: test
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: '16.x'
          registry-url: 'https://npm.pkg.github.com'
      - run: npm ci
      - run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GH_PACKAGE_DEPLOYMENT }}
